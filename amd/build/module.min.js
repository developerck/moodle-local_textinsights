define("local_textinsights/module",["exports","jquery","core/ajax","core/notification"],(function(_exports,_jquery,_ajax,_notification){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Module initialization
   *
   * @module     local_textinsights/module
   * @copyright  2025 DeveloperCK <developerck@gmail.com>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_jquery=_interopRequireDefault(_jquery),_notification=_interopRequireDefault(_notification);_exports.init=(courseId,capabilities)=>{const menuHtml='\n        <div class="textinsights-menu" style="display:none;">\n            <div class="list-group">\n                '.concat(capabilities.explain?'<a href="#" class="list-group-item list-group-item-action" data-action="explain">\n                        <i class="fa fa-info-circle"></i> '.concat(M.util.get_string("explain","local_textinsights"),"\n                    </a>"):"","\n                ").concat(capabilities.summarize?'<a href="#" class="list-group-item list-group-item-action" data-action="summarize">\n                        <i class="fa fa-compress"></i> '.concat(M.util.get_string("summarize","local_textinsights"),"\n                    </a>"):"","\n                ").concat(capabilities.validate?'<a href="#" class="list-group-item list-group-item-action" data-action="validate">\n                        <i class="fa fa-check-circle"></i> '.concat(M.util.get_string("validate","local_textinsights"),"\n                    </a>"):"",'\n            </div>\n            <div class="ai-icon-bottom-right">\n        <div class="ai-icon-bottom-right"> ').concat(M.util.get_string("poweredby","local_textinsights"),'\n        <i class="fa fa-robot fa-spin"></i>\n        </div>\n        </div>\n        </div>'),$menu=(0,_jquery.default)(menuHtml).appendTo("body"),$tooltip=(0,_jquery.default)('\n        <div class="textinsights-tooltip" style="display:none;">\n            <div class="textinsights-tooltip-content"></div>\n            <button type="button" class="btn btn-link btn-sm close-tooltip">\n                <i class="fa fa-times"></i>\n            </button>\n        </div>').appendTo("body");(0,_jquery.default)("head").append("\n        <style>\n            .textinsights-tooltip {\n                position: absolute;\n                max-width: 400px;\n                background: #fff;\n                border: 1px solid #ddd;\n                border-radius: 4px;\n                padding: 15px;\n                box-shadow: 0 2px 5px rgba(0,0,0,0.2);\n                z-index: 1050;\n            }\n            .textinsights-tooltip .close-tooltip {\n                position: absolute;\n                top: 5px;\n                right: 5px;\n                padding: 0;\n                width: 24px;\n                height: 24px;\n                line-height: 24px;\n                text-align: center;\n            }\n            .textinsights-menu {\n                position: absolute;\n                background: #fff;\n                border: 1px solid #ddd;\n                border-radius: 4px;\n                box-shadow: 0 2px 5px rgba(0,0,0,0.2);\n                z-index: 1000;\n            }\n            .textinsights-loading {\n                text-align: center;\n                padding: 10px;\n            }\n            .ai-icon-bottom-right {\n            position: relative;\n            left: 5px;   \n            color: #007bff;  \n            opacity: 0.7;    \n        }\n        </style>\n    ");const positionTooltip=range=>{const rect=range.getBoundingClientRect(),scrollTop=window.pageYOffset||document.documentElement.scrollTop,scrollLeft=window.pageXOffset||document.documentElement.scrollLeft;$tooltip.css({top:rect.bottom+scrollTop+5+"px",left:rect.left+scrollLeft+"px"})};(0,_jquery.default)(document).on("mouseup",".course-content, .course-content *",(async()=>{const selection=(()=>{const selection=window.getSelection();if(!selection.rangeCount)return null;const range=selection.getRangeAt(0);if(!range.toString().trim())return null;const startNode=range.startContainer,endNode=range.endContainer;if(startNode.nodeType===Node.TEXT_NODE){const startOffset=range.startOffset,text=startNode.textContent;let start=startOffset;for(;start>0&&/\S/.test(text[start-1]);)start--;range.setStart(startNode,start)}if(endNode.nodeType===Node.TEXT_NODE){const endOffset=range.endOffset,text=endNode.textContent;let end=endOffset;for(;end<text.length&&/\S/.test(text[end]);)end++;range.setEnd(endNode,end)}return{text:range.toString().trim(),range:range}})();if(!selection||!selection.text)return void $menu.hide();const rect=selection.range.getBoundingClientRect(),scrollTop=window.pageYOffset||document.documentElement.scrollTop,scrollLeft=window.pageXOffset||document.documentElement.scrollLeft;$menu.css({top:rect.bottom+scrollTop+5+"px",left:rect.left+scrollLeft+"px"}).show(),$menu.data("selection",selection)})),$menu.on("click","[data-action]",(async function(e){e.preventDefault();const action=(0,_jquery.default)(this).data("action"),selection=$menu.data("selection");if(!selection)return;$menu.hide(),$tooltip.find(".textinsights-tooltip-content").html('<div class="textinsights-loading"><i class="fa fa-loading fa-spin"></i> '+M.util.get_string("loading","local_textinsights")+"</div>"),$tooltip.show(),positionTooltip(selection.range);const result=await(async(text,action)=>{try{return(await(0,_ajax.call)([{methodname:"local_textinsights_process_text",args:{text:text,action:action,courseid:courseId}}])[0]).result}catch(error){return _notification.default.exception(error),M.util.get_string("error","local_textinsights")}})(selection.text,action);$tooltip.find(".textinsights-tooltip-content").html(result),positionTooltip(selection.range)})),$tooltip.on("click",".close-tooltip",(()=>{$tooltip.hide()})),(0,_jquery.default)(document).on("mousedown",(e=>{(0,_jquery.default)(e.target).closest(".textinsights-menu, .textinsights-tooltip").length||($menu.hide(),$tooltip.hide())})),(0,_jquery.default)(window).on("resize scroll",(()=>{if($tooltip.is(":visible")){const selection=$menu.data("selection");selection&&positionTooltip(selection.range)}}))}}));

//# sourceMappingURL=module.min.js.map